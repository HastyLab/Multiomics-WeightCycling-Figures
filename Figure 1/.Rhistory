theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodymass, Time_wk==18 & Week==18), aes(x=Group, y=Bodymass, fill=Group)) +
geom_bar(stat="summary",size=0, position="dodge", color="black") +
geom_jitter(color="black", alpha=0.5, width=0.7) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==18 & Week==18), aes(x=Group, ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Body Mass (g)") +
ylim(0,60) +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
#Sample Size
subset(bodymass, Time_wk==3 | Time_wk==9 | Time_wk==18) %>%
subset(., Week==3 | Week==9 | Week==18) %>%
group_by(Group,Week,Time_wk) %>%
dplyr::count()
#T.tests with Bonferroni correction for multiple comparisons for body mass over time
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==3) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==9) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==18) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
#T.tests with Bonferroni correction for multiple comparisons for body mass at sacrifice
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==3) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==9) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==18) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
#Body Mass over time
ggplot(subset(bodymass, Time_wk==3), aes(x=as.numeric(Week)-1, y=Bodymass, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(stat="summary", size=1) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==3), aes(ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="Weeks on Diet", y="Body Mass (g)") +
scale_x_continuous(breaks=seq(from=0, to=18, by=3)) +
ylim(0,60) +
scale_color_manual(values=wccols) +
geom_vline(xintercept = c(9,18), linetype="dashed")
ggplot(subset(bodymass, Time_wk==9), aes(x=as.numeric(Week)-1, y=Bodymass, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(stat="summary", size=1) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==9), aes(ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="Weeks on Diet", y="Body Mass (g)") +
scale_x_continuous(breaks=seq(from=0, to=18, by=3)) +
ylim(0,60) +
scale_color_manual(values=wccols) +
geom_vline(xintercept = c(9,18), linetype="dashed")
ggplot(subset(bodymass, Time_wk==18), aes(x=as.numeric(Week)-1, y=Bodymass, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(stat="summary", size=1) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==18), aes(ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="Weeks on Diet", y="Body Mass (g)") +
scale_x_continuous(breaks=seq(from=0, to=18, by=3)) +
ylim(0,60) +
scale_color_manual(values=wccols) +
geom_vline(xintercept = c(9,18), linetype="dashed")
#Body Mass at sacrifice
ggplot(subset(bodymass, Time_wk==3 & Week==3), aes(x=Group, y=Bodymass, fill=Group, color=Group)) +
geom_bar(stat="summary",size=0, position="dodge", color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==3 & Week==3), aes(x=Group, ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Body Mass (g)") +
ylim(0,60) +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodymass, Time_wk==9 & Week==9), aes(x=Group, y=Bodymass, fill=Group)) +
geom_bar(stat="summary",size=0, position="dodge", color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==9 & Week==9), aes(x=Group, ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Body Mass (g)") +
ylim(0,60) +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodymass, Time_wk==18 & Week==18), aes(x=Group, y=Bodymass, fill=Group)) +
geom_bar(stat="summary",size=0, position="dodge", color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodymass_sem, Time_wk==18 & Week==18), aes(x=Group, ymin=Bodymass-sem, ymax=Bodymass+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Body Mass (g)") +
ylim(0,60) +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
#Sample Size
subset(bodymass, Time_wk==3 | Time_wk==9 | Time_wk==18) %>%
subset(., Week==3 | Week==9 | Week==18) %>%
group_by(Group,Week,Time_wk) %>%
dplyr::count()
#T.tests with Bonferroni correction for multiple comparisons for body mass over time
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==3) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==9) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==18) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
#T.tests with Bonferroni correction for multiple comparisons for body mass at sacrifice
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==3) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==9) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
compare_means(Bodymass ~ Group, data = subset(bodymass, Time_wk==18) %>% tidyr::drop_na(), group.by="Week", method="t.test", p.adjust.method="bonferroni")
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==3), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary") +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==3), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==9), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary") +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==9), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==18), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==18), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==3), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==3), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==9), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black") +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==9), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==18), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary") +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==18), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
### T.test with Bonferroni correction for multiple comparisons
# Lean Mass
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==3), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==9), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==18), method="t.test", p.adjust.method = "bonferroni")
# Fat Mass
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==3), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==9), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==18), method="t.test", p.adjust.method = "bonferroni")
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==3), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==3), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==9), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==9), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Lean_mass" & Time_wk==18), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_mass" & Time_wk==18), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==3), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==3), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==9), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary",color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==9), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25,color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
ggplot(subset(bodycomp,Source=="Fat_mass" & Time_wk==18), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_mass" & Time_wk==18), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
### T.test with Bonferroni correction for multiple comparisons
# Lean Mass
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==3), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==9), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Lean_mass" & Time_wk==18), method="t.test", p.adjust.method = "bonferroni")
# Fat Mass
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==3), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==9), method="t.test", p.adjust.method = "bonferroni")
compare_means(Bodycomp ~ Group, data = subset(bodycomp,Source=="Fat_mass" & Time_wk==18), method="t.test", p.adjust.method = "bonferroni")
library(Seurat)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(reshape2)
#Data file
data.integrated <- readRDS("../Inputs/IntegratedData.rds")
#Color panels
maccols <- brewer.pal(n=8, name="Blues")[c(-1,-3,-5,-7)]
monocols <- c("#ff8ade","#e324ad")
dccols <- brewer.pal(n=9, name="Greens")[-1]
tcols <- brewer.pal(n=8, name="Reds")[-1]
nkcols <- c("#876149","#6e3f22")
bcols <- brewer.pal(n=4, name="Purples")[-1]
othcols <- c("#71a157","#00c5cc","#a18e25","#b282b3")
strcols <- brewer.pal(n=4, name="Oranges")[-1]
wccols = c("#878787", "#518db6","#94cc73","#e96b53")
cols <- c(maccols,monocols,dccols,tcols,nkcols,bcols,othcols,strcols)
llcols <- c("#4292C6","#ff8ade","#238B45","#EF3B2C","#876149","#9E9AC8","#71a157","#00c5cc","#a18e25","#b282b3","#FD8D3C")
#Import Body Mass Data
bodymass <- read.csv("../Inputs/SuppFig2/HLC90_Seq-Mice_BodyMass.csv")
bodymass <- reshape2::melt(bodymass, id.vars=c("Mouse.","Group"), measure.vars=colnames(bodymass)[3:29], variable.name="Week", value.name="Bodymass")
colnames(bodymass) <- c("Mouse","Group","Week","Bodymass")
bodymass$Group <- factor(bodymass$Group, levels = c("Lean","Obese","WL","WC"))
#Body Mass Error Calculation
bodymass_sem <- bodymass %>%
group_by(Group, Week) %>%
dplyr::summarize(mean = mean(Bodymass), sd = sd(Bodymass))
bodymass_sem <- bodymass_sem %>% mutate(sem = sd/sqrt(4))
colnames(bodymass_sem) = c("Group","Week","Bodymass","sd","sem")
#Import Food Intake
foodintake <- read.csv("../Inputs/SuppFig2/HLC90_Seq-Mice_FoodIntake.csv")
foodintake <- reshape2::melt(foodintake, id.vars=c("Mouse.","Group"), measure.vars=colnames(foodintake)[3:28], variable.name="Week", value.name="foodintake")
colnames(foodintake) <- c("Mouse","Group","Week","FoodIntake")
foodintake$Group <- factor(foodintake$Group, levels = c("Lean","Obese","WL","WC"))
#Food Intake Error Calculation
foodintake_sem <- foodintake %>%
group_by(Group, Week) %>%
dplyr::summarize(mean = mean(FoodIntake), sd = sd(FoodIntake))
foodintake_sem <- foodintake_sem %>% mutate(sem = sd/sqrt(4))
colnames(foodintake_sem) = c("Group","Week","FoodIntake","sd","sem")
#Import ipGTT
gtt <- read.csv("../Inputs/SuppFig2/HLC90_Seq-Mice_ipGTT.csv")
gtt <- reshape2::melt(gtt, id.vars=c("Mouse.","Group"), measure.vars=colnames(gtt)[3:9], variable.name="Time", value.name="PlasmaGlucose")
colnames(gtt) <- c("Mouse","Group","Time","PlasmaGlucose")
gtt$Group <- factor(gtt$Group, levels = c("Lean","Obese","WL","WC"))
gtt$Time <- ifelse(gtt$Time == "t0",0,
ifelse(gtt$Time == "t15", 15,
ifelse(gtt$Time == "t30",30,
ifelse(gtt$Time == "t45",45,
ifelse(gtt$Time == "t60",60,
ifelse(gtt$Time == "t90",90,
ifelse(gtt$Time == "t120", 120,NA))))))) #This is definitely not the most efficient way to do this, but it works and is robust.
#ipGTT Error Calculation
gtt_sem <- gtt %>%
group_by(Group, Time) %>%
dplyr::summarize(mean = mean(PlasmaGlucose), sd = sd(PlasmaGlucose))
gtt_sem <- gtt_sem %>% mutate(sem = sd/sqrt(4))
colnames(gtt_sem) = c("Group","Time","PlasmaGlucose","sd","sem")
#Import Sac Mass
tissuemass <- read.csv("../Inputs/SuppFig2/HLC90_Seq-Mice_eATMass.csv")
tissuemass <- reshape2::melt(tissuemass, id.vars=c("Mouse.","Group"), measure.vars=colnames(tissuemass)[3:4], variable.name="Source", value.name="Mass")
colnames(tissuemass) <- c("Mouse","Group","Source","Mass")
tissuemass$Group <- factor(tissuemass$Group, levels = c("Lean","Obese","WL","WC"))
#Sac Mass Error Calculation
tissuemass_sem <- tissuemass %>%
group_by(Group, Source) %>%
dplyr::summarize(mean = mean(Mass), sd = sd(Mass))
tissuemass_sem <- tissuemass_sem %>% mutate(sem = sd/sqrt(4))
colnames(tissuemass_sem) = c("Group","Source","Mass","sd","sem")
#Calculate the AUC
#7 measurements per mouse; 16 mice
gtt <- gtt %>% arrange(Mouse)
auc <- data.frame(Mouse = unique(gtt$Mouse))
auc$Group <- c(rep("Lean",4), rep("Obese",4),rep("WL",4),rep("WC",4))
AUC=NULL
for (mouse in unique(gtt$Mouse)){
AUC <- rbind(AUC,(sum(diff(subset(gtt, Mouse==mouse)$Time)*(head(subset(gtt, Mouse==mouse)$PlasmaGlucose,-1)+tail(subset(gtt, Mouse==mouse)$PlasmaGlucose,-1)))/2))
}
auc$AUC <- AUC[,1]
#WL is missing a value for the final time point of mouse #1933,H so we have to calculate that AUC separately and replace it.
m1933 <- subset(gtt,Mouse==1933)[1:6,]
auc[11,3] <- sum(diff(m1933$Time)*(head(m1933$PlasmaGlucose,-1)+tail(m1933$PlasmaGlucose,-1)))/2
auc$Group <- factor(auc$Group, levels=c("Lean","Obese","WL","WC"))
#Error for AUC
auc_sem <- auc %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(AUC), sd = sd(AUC))
auc_sem <- auc_sem %>% mutate(sem = sd/sqrt(4))
colnames(auc_sem) = c("Group","AUC","sd","sem")
tissuemass
#Sample Size
tissuemass %>% group_by(Group,Source) %>% dplyr::count()
#Total mass
ggplot(subset(tissuemass,Source=="TotalMass"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(tissuemass_sem, Source=="TotalMass"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25, color="black") +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="Body Mass (g)") +
scale_fill_manual(values=wccols) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))  +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
#T.tests with Bonferroni correction for multiple comparisons
compare_means(Mass ~ Group, data = subset(tissuemass,Source=="TotalMass"), method="t.test", p.adjust.method = "bonferroni")
#eAT Mass
ggplot(subset(tissuemass,Source=="eATMass"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(tissuemass_sem, Source=="eATMass"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25, color="black") +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="eAT Mass (g)") +
scale_fill_manual(values=wccols) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))  +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
#T.tests with Bonferroni correction for multiple comparisons
compare_means(Mass ~ Group, data = subset(tissuemass,Source=="eATMass"), method="t.test", p.adjust.method = "bonferroni")
#Sample Size
tissuemass %>% group_by(Group,Source) %>% dplyr::count()
library(RColorBrewer)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(reshape2)
library(viridis)
library(readxl)
library(Seurat)
#Color panels
wccols = c("Lean" = "#878787", "Obese" = "#518db6", "WL" = "#94cc73", "WC" = "#e96b53")
#Import Body Mass Data for female mice
f_bodymass <- read_excel("../Inputs/SuppFig3/SuppFig3_Data.xlsx",sheet=4)
f_bodymass <- reshape2::melt(f_bodymass, id.vars=c("MouseID","Group"), measure.vars=colnames(f_bodymass)[3:30], variable.name="Week", value.name="Bodymass")
colnames(f_bodymass) <- c("Mouse","Group","Week","Bodymass")
f_bodymass$Group <- factor(f_bodymass$Group, levels = c("Lean","Obese","WL","WC"))
#Body Mass Error Calculation for female mice
f_bodymass_sem <- f_bodymass %>%
group_by(Group, Week) %>%
dplyr::summarize(mean = mean(Bodymass), sd = sd(Bodymass))
f_bodymass_n <- f_bodymass %>% dplyr::count(Group, Week)
f_bodymass_sem$n <- f_bodymass_n$n
f_bodymass_sem <- f_bodymass_sem %>% mutate(sem = sd/sqrt(n)) %>% tidyr::drop_na()
colnames(f_bodymass_sem) = c("Group","Week","Bodymass","sd","n","sem")
#Body Composition Data for female mice
f_bodycomp <- read_excel("../Inputs/SuppFig3/SuppFig3_Data.xlsx", sheet=5)
f_bodycomp <- reshape2::melt(f_bodycomp, id.vars=c("MouseID","Group"), measure.vars=colnames(f_bodycomp)[3:4], variable.name="Source", value.name="Bodycomp")
colnames(f_bodycomp) <- c("Mouse","Group","Source","Bodycomp")
f_bodycomp$Group <- factor(f_bodycomp$Group, levels = c("Lean","Obese","WL","WC"))
#Body Composition Error Calculation for female mice
f_bodycomp_sem <- f_bodycomp %>%
group_by(Group, Source) %>%
dplyr::summarize(mean = mean(Bodycomp), sd = sd(Bodycomp))
f_bodycomp_n <- f_bodycomp %>% dplyr::count(Group, Source)
f_bodycomp_sem$n <- f_bodycomp_n$n
f_bodycomp_sem <- f_bodycomp_sem %>% mutate(sem = sd/sqrt(n)) %>% tidyr::drop_na()
colnames(f_bodycomp_sem) = c("Group","Source","Bodycomp","sd","n","sem")
#Import ipGTT Data for female mice
f_gtt <- read_excel("../Inputs/SuppFig3/SuppFig3_Data.xlsx",sheet=6)
f_gtt <- reshape2::melt(f_gtt, id.vars=c("MouseID","Group"), measure.vars=colnames(f_gtt)[3:10], variable.name="Time", value.name="PlasmaGlucose")
f_gtt$Group <- factor(f_gtt$Group, levels = c("Lean","Obese","WL","WC"))
f_gtt <- subset(f_gtt, PlasmaGlucose!="NA")
#ipGTT Error Calculation for female mice
f_gtt_sem <- f_gtt %>%
group_by(Group, Time) %>%
dplyr::summarize(mean = mean(PlasmaGlucose), sd = sd(PlasmaGlucose))
f_gtt_n <- f_gtt %>% dplyr::count(Group, Time)
f_gtt_sem$n <- f_gtt_n$n
f_gtt_sem <- f_gtt_sem %>% mutate(sem = sd/sqrt(n))
colnames(f_gtt_sem) = c("Group","Time","PlasmaGlucose","sd","n","sem")
#Calculate the AUC for female mice
f_gtt <- f_gtt %>% arrange(MouseID)
f_auc <- distinct(f_gtt[,1:2])
f_gtt$Time <- as.numeric(as.character(f_gtt$Time))
f_AUC=NULL
for (mouse in unique(f_gtt$MouseID)){
f_AUC <- rbind(f_AUC,(sum(diff(subset(f_gtt, MouseID==mouse)$Time)*(head(subset(f_gtt, MouseID==mouse)$PlasmaGlucose,-1)+tail(subset(f_gtt, MouseID==mouse)$PlasmaGlucose,-1)))/2))
}
f_auc$AUC <- f_AUC[,1]
f_auc$Group <- factor(f_auc$Group, levels=c("Lean","Obese","WL","WC"))
#Error for AUC for female mice
f_auc_sem <- f_auc %>%
group_by(Group) %>%
dplyr::summarize(mean = mean(AUC), sd = sd(AUC))
f_auc_n <- f_auc %>% dplyr::count(Group)
f_auc_sem$n <- f_auc_n$n
f_auc_sem <- f_auc_sem %>% mutate(sem = sd/sqrt(n))
colnames(f_auc_sem) = c("Group","AUC","sd","n","sem")
f_bodymass
#Sample Size
f_bodymass %>% group_by(Group,Week) %>% dplyr::count()
#Sample Size
subset(f_bodymass, Week=="26") %>% group_by(Group,Week) %>% dplyr::count() # We use week 26 because ipGTTs were performed at this time
f_bodycomp
#Sample Size
f_bodymass %>% group_by(Group,Source) %>% dplyr::count()
#Sample Size
f_bodymass %>% group_by(Group,Source) %>% dplyr::count()
#Sample Size
f_bodycomp %>% group_by(Group,Source) %>% dplyr::count()
# Lean Mass
compare_means(Bodycomp ~ Group, data = subset(f_bodycomp,Source=="Lean_mass"), method="t.test", p.adjust.method = "bonferroni")
# Fat Mass
compare_means(Bodycomp ~ Group, data = subset(f_bodycomp,Source=="Fat_mass"), method="t.test", p.adjust.method = "bonferroni")
f_gtt
#Sample Size
subset(f_gtt, Time==0) %>% group_by(Group) %>% dplyr::count()
#T.tests with Bonferroni correction for multiple comparisons
compare_means(PlasmaGlucose ~ Group, data = f_gtt, group.by="Time", method="t.test", p.adjust.method="bonferroni")
#T.tests with Bonferroni correction for multiple comparisons
compare_means(AUC ~ Group, data = f_auc, method="t.test", p.adjust.method = "bonferroni")
#AUC
ggplot(f_auc_sem, aes(x=Group, y=AUC, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=f_auc_sem, aes(ymin=AUC-sem, ymax=AUC+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Plasma Glucose AUC") +
ylim(0,50000) +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5)
f_auc_sem
auc_sem
f_auc
#AUC
ggplot(f_auc_sem, aes(x=Group, y=AUC, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(data=f_auc, aes(y=AUC, x=Group), size=0.5, width=0.3, alpha=0.5, color="black") +
geom_errorbar(data=f_auc_sem, aes(ymin=AUC-sem, ymax=AUC+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Plasma Glucose AUC") +
ylim(0,50000) +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5)
#AUC
ggplot(f_auc_sem, aes(x=Group, y=AUC, fill=Group)) +
geom_bar(stat="summary", color="black", size=0) +
geom_jitter(data=f_auc, aes(y=AUC, x=Group), width=0.3, alpha=0.5, color="black") +
geom_errorbar(data=f_auc_sem, aes(ymin=AUC-sem, ymax=AUC+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="", y="Plasma Glucose AUC") +
ylim(0,50000) +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5)
ggplot(subset(f_bodycomp,Source=="Lean_mass"), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary", width=0.8, color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(f_bodycomp_sem, Source=="Lean_mass"), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,30) +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5)
ggplot(subset(f_bodycomp,Source=="Fat_mass"), aes(x=Group, y=Bodycomp, fill=Group)) +
geom_bar(stat="summary", width=0.8, color="black", size=0) +
geom_jitter(color="black", alpha=0.5, width=0.3) +
geom_errorbar(data=subset(f_bodycomp_sem, Source=="Fat_mass"), aes(ymin=Bodycomp-sem, ymax=Bodycomp+sem), width=0.25, color="black") +
theme_pubr(base_size=12) +
NoLegend() +
ylim(0,25) +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5)
#Sample Size
f_bodycomp %>% group_by(Group,Source) %>% dplyr::count()
### T.test with Bonferroni correction for multiple comparisons
# Lean Mass
compare_means(Bodycomp ~ Group, data = subset(f_bodycomp,Source=="Lean_mass"), method="t.test", p.adjust.method = "bonferroni")
# Fat Mass
compare_means(Bodycomp ~ Group, data = subset(f_bodycomp,Source=="Fat_mass"), method="t.test", p.adjust.method = "bonferroni")
