ggplot(CumulativeFI, aes(x=as.numeric(Week)-1, y=C_FoodIntake, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(data=subset(CumulativeFI, Week=="wk0" | Week=="wk9"|Week=="wk18"|Week=="wk27"), aes(x=as.numeric(Week)-1, y=C_FoodIntake, color=Group),stat="summary", size=1) +
geom_errorbar(data=CumulativeFI_sem, aes(ymin=C_FoodIntake-sem, ymax=C_FoodIntake+sem), width=0.5) +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="Weeks on Diet", y="Cumulative Food Intake \n (kcal/mouse)") +
scale_x_continuous(breaks=seq(from=0, to=27, by=3)) +
ylim(0,4000) +
scale_color_manual(values=wccols) +
geom_vline(xintercept = c(9,18), linetype="dashed")
#Calculate slope for each interval
slopeFI <- CumulativeFI[which(CumulativeFI$Week %in% c("wk0","wk9","wk18","wk27")),] %>% group_by(Group, Week) %>%
summarize(mean = mean(C_FoodIntake)) %>% mutate(Week=as.numeric(Week)-1)
#Model splitting by group; each model is for a 9wk interval
model1 <- dlply(slopeFI[slopeFI$Week %in% c(0,9),], c("Group"), function(df)
lm(mean ~ Week, data = df))
model2 <- dlply(slopeFI[slopeFI$Week %in% c(9,18),], c("Group"), function(df)
lm(mean ~ Week, data = df))
model3 <- dlply(slopeFI[slopeFI$Week %in% c(18,27),], c("Group"), function(df)
lm(mean ~ Week, data = df))
# Apply coef to each model and return a data frame
ldply(model1, coef)
ldply(model2, coef)
ldply(model3, coef)
ggplot(subset(bodycomp,Source=="Lean_g"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Lean_g"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25) +
geom_jitter(size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="Lean Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
ggplot(subset(bodycomp,Source=="Fat_g"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_errorbar(data=subset(bodycomp_sem, Source=="Fat_g"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25) +
geom_jitter(size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="Fat Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
### T.test with Bonferroni correction for multiple comparisons
compare_means(Mass ~ Group, data = subset(bodycomp,Source=="Lean_g"), method="t.test", p.adjust.method = "bonferroni")# Lean Mass
compare_means(Mass ~ Group, data = subset(bodycomp,Source=="Fat_g"), method="t.test", p.adjust.method = "bonferroni")# Fat Mass
#GTT -----
ggplot(gtt_sem, aes(x=Time, y=PlasmaGlucose, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(stat="summary", size=1) +
geom_errorbar(data=gtt_sem, aes(ymin=PlasmaGlucose-sem, ymax=PlasmaGlucose+sem), width=0.25) +
theme_pubr(base_size=12) +
NoLegend() +
labs(x="Time (min)", y="Plasma Glucose (mg/dL)") +
scale_x_continuous(breaks=seq(from=0, to=150, by=30)) +
ylim(0,500) +
scale_color_manual(values=wccols)
#ANOVA
compare_means(PlasmaGlucose ~ Group, data = gtt, method="anova") #Across all timepoints
compare_means(PlasmaGlucose ~ Group, data = gtt, group.by="Time",method="anova") #By time
#T.tests with Bonferroni correction for multiple comparisons
compare_means(PlasmaGlucose ~ Group, data = gtt, group.by="Time", method="t.test", p.adjust.method="bonferroni")
#To copy Legend only
ggplot(gtt_sem, aes(x=Time, y=PlasmaGlucose, color=Group)) +
geom_point(stat="summary", size=2) +
geom_line(stat="summary", size=1) +
geom_errorbar(data=gtt_sem, aes(ymin=PlasmaGlucose-sem, ymax=PlasmaGlucose+sem), width=0.25) +
theme_classic(base_size=12) +
labs(x="Time (min)", y="Plasma Glucose (mg/dL)") +
scale_x_continuous(breaks=seq(from=0, to=150, by=30)) +
ylim(0,500) +
scale_color_manual(values=wccols)
#AUC------
ggplot(auc_sem, aes(x=Group, y=AUC, fill=Group)) +
geom_bar(stat="summary", color="black") +
geom_errorbar(data=auc_sem, aes(ymin=AUC-sem, ymax=AUC+sem), width=0.25) +
geom_jitter(data=auc, aes(y=AUC, x=Group), size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="Plasma Glucose AUC") +
ylim(0,50000) +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
#T.tests with Bonferroni correction for multiple comparisons
compare_means(AUC ~ Group, data = auc, method="t.test", p.adjust.method = "bonferroni")
# Without stats (added in Ppt)
ggplot(subset(tissuemass,Tissue=="pgAT"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_errorbar(data=subset(tissuemass_sem, Tissue=="pgAT"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25) +
geom_jitter(size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="eAT Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
ggplot(subset(tissuemass,Tissue=="sAT"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_errorbar(data=subset(tissuemass_sem, Tissue=="sAT"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25) +
geom_jitter(size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="sAT Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
ggplot(subset(tissuemass,Tissue=="Liver"), aes(x=Group, y=Mass, fill=Group)) +
geom_bar(stat="summary", color="black", width=0.8) +
geom_errorbar(data=subset(tissuemass_sem, Tissue=="Liver"), aes(ymin=Mass-sem, ymax=Mass+sem), width=0.25) +
geom_jitter(size=0.5, width=0.3, alpha=0.7) +
theme_pubr(base_size=11) +
NoLegend() +
labs(x="", y="Liver Mass (g)") +
scale_fill_manual(values=wccols) +
theme(aspect.ratio = 1.5, axis.text.x = element_text(angle=45, hjust=1, vjust=0.98))
# For stats
## eAT/pgAT
compare_means(Mass ~ Group, data = subset(tissuemass,Tissue=="pgAT"), method="t.test", p.adjust.method = "bonferroni")
## sAT
compare_means(Mass ~ Group, data = subset(tissuemass,Tissue=="sAT"), method="t.test", p.adjust.method = "bonferroni")
## Liver
compare_means(Mass ~ Group, data = subset(tissuemass,Tissue=="Liver"), method="t.test", p.adjust.method = "bonferroni")
adipocount <- read.csv("../Inputs/Fig1/MC74_AdipocyteCount_Skeletonize.csv")
adipocount$Group <- factor(adipocount$Group, levels = c("Lean","Obese","WL","WC"))
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count",
trim = FALSE,
adjust = 1) +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(y=Group, x=Diameter, fill=stat(x))) +
geom_density_ridges_gradient(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5) +
theme_classic() +
scale_fill_viridis(name="Diameter",
option="C",
limits=c(0,150)) +
NoLegend()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.8)) +
geom_density_ridges2(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.5) +
theme_classic() +
scale_fill_manual(values=wccols) +
NoLegend()
ggplot(subset(adipocount[sample(1:nrow(adipocount), 20000),], Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.9)) +
geom_density_ridges2(aes(point_color=Group, vline_color=Group),
scale = 3,
size= 0.2,
rel_min_height=0.01,
jittered_points=TRUE,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.75,
point_size=0.01,
point_alpha=1,
position="points_jitter") +
labs(x=expression("Lipid Droplet Diameter" ~(Î¼m^2)),y="") +
theme_classic(base_size = 16) +
scale_fill_manual(values=wccols) +
scale_fill_manual(aesthetics=c("point_color", "vline_color"),values=wccols) +
scale_color_manual(values=wccols) +
NoLegend() +
theme(panel.grid.major = element_line(color="lightgrey"))
subset(adipocount, Diameter<150 & Diameter>20)
head(subset(adipocount, Diameter<150 & Diameter>20))
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter))
head(adipocount_sem)
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter))
adipocount_sem
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate( n = dplyr::count(Group)) %>% mutate(sem = sd/sqrt(n))
adipocount_n <- adipocyte %>% group_by(Group) %>% dplyr::count(Group)
adipocount_n <- adipocount %>% group_by(Group) %>% dplyr::count(Group)
adipocount_n
adipocount_n
cbind
?cbind
adipocount_n[,2]
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n[,2]) %>%mutate(sem = sd/sqrt(n))
adipocount_sem
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem$n, ymax=Diameter+sem$n), width=0.25) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count",
trim = FALSE,
adjust = 1) +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=mean-sem$n, ymax=mean+sem$n), width=0.25) +
theme_classic()
adipocount
adipocount_sem
colnames(adipocount_sem) <- c("Group","Diameter","sd","n","sem")
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.25) +
theme_classic()
adipocount_sem
colnames(adipocount_sem) <- c("Group","Diameter","sd","n","sem")
adipocount_sem
adipocount_sem$n
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = as.numeric(adipocount_n[,2])) %>% mutate(sem = sd/sqrt(n))
list(adipocount_n[,2])
adipocount_n[,2]
adipocount_n$n
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = list(adipocount_n$n)) %>% mutate(sem = sd/sqrt(n))
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = list(adipocount_n$n)) %>% mutate(sem = sd/sqrt(n))
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n$n) %>% mutate(sem = sd/sqrt(n))
colnames(adipocount_sem) <- c("Group","Diameter","sd","n","sem")
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n$n) %>% mutate(sem = sd/sqrt(n))
adipocount_sem
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.25) +
theme_classic()
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(Diameter=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n$n) %>% mutate(sem = sd/sqrt(n))
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.25) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sd, ymax=Diameter+sd), width=0.25) +
theme_classic()
adipocount_sem
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(Diameter=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n$n) %>% mutate(sem = sd/sqrt(n))
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(Diameter=mean(Diameter))
adipocount_sem
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter)) %>% mutate(n = adipocount_n$n) %>% mutate(sem = sd/sqrt(n))
colnames(adipocount_sem$mean) <- "Diameter"
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sd, ymax=Diameter+sd), width=0.25) +
theme_classic()
colname(adipocount_sem$mean) <- "Diameter"
colnames(adipocount)
colnames(adipocount_sem)
colnames(adipocount_sem)[2] <- "Diameter"
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sd, ymax=Diameter+sd), width=0.25) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.25) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.5) +
theme_classic()
adipocount_n <- adipocount %>% group_by(Group) %>% dplyr::count(Group)
adipocount_sem <- adipocount %>% group_by(Group) %>% summarize(mean=mean(Diameter), sd = sd(Diameter))
adipocount_sem$n <- adipocount_n$n
adipocount_sem <- adipocount_sem %>% mutate(sem = sd/sqrt(n))
colnames(adipocount_sem) = c("Group","Diameter","sd","n","sem")
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sem, ymax=Diameter+sem), width=0.5) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_bar(stat="summary") +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
geom_errorbar(data=adipocount_sem, aes(ymin=Diameter-sd, ymax=Diameter+sd), width=0.5) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count",
trim = FALSE,
adjust = 1) +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
ggboxplot(d=subset(adipocount, Diameter<150 & Diameter>20),
x="Group",
y="Diameter",
fill="Group",
add = "mean_se")  +
theme_classic() +
scale_fill_manual(values=wccols) +
theme(axis.text.x=element_text(face="bold", size=10)) +
labs(x="", y="") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank()) +
NoLegend()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count",
trim = FALSE,
adjust = 1) +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(y=Group, x=Diameter, fill=stat(x))) +
geom_density_ridges_gradient(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5) +
theme_classic() +
scale_fill_viridis(name="Diameter",
option="C",
limits=c(0,150)) +
NoLegend()
adipocount
head(adipocount)
#T.test with Bonferroni correction for multiple comparisons
## With size thresholds
compare_means(Diameter ~ Group, data = subset(adipocount, Diameter<150 & Diameter>20), method="t.test", p.adjust.method = "bonferroni")
## Without adjusting for size thresholds
compare_means(Diameter ~ Group, data = adipocount, method="t.test", p.adjust.method = "bonferroni")
#T.test with Bonferroni correction for multiple comparisons
## With size thresholds
compare_means(Diameter ~ Group, data = subset(adipocount, Diameter<150 & Diameter>20), method="t.test", p.adjust.method = "bonferroni")
#
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
#Plot a density distribution
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(y=Group, x=Diameter, fill=stat(x))) +
geom_density_ridges_gradient(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5) +
theme_classic() +
scale_fill_viridis(name="Diameter",
option="C",
limits=c(0,150)) +
NoLegend()
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.8)) +
geom_density_ridges2(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.5) +
theme_classic() +
scale_fill_manual(values=wccols) +
NoLegend()
#Ridgeplot colored by adipocyte size
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.8)) +
geom_density_ridges2(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.5) +
theme_classic() +
scale_fill_manual(values=wccols) +
NoLegend()
#Downsampled ridgeplot with rain jitter of samples showing distribution for a random 20000 cells (~5000 per group)
ggplot(subset(adipocount[sample(1:nrow(adipocount), 20000),], Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.9)) +
geom_density_ridges2(aes(point_color=Group, vline_color=Group),
scale = 3,
size= 0.2,
rel_min_height=0.01,
jittered_points=TRUE,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.75,
point_size=0.01,
point_alpha=1,
position="points_jitter") +
labs(x=expression("Lipid Droplet Diameter" ~(Î¼m^2)),y="") +
theme_classic(base_size = 16) +
scale_fill_manual(values=wccols) +
scale_fill_manual(aesthetics=c("point_color", "vline_color"),values=wccols) +
scale_color_manual(values=wccols) +
NoLegend() +
theme(panel.grid.major = element_line(color="lightgrey"))
#T.test with Bonferroni correction for multiple comparisons
## With size thresholds
compare_means(Diameter ~ Group, data = subset(adipocount, Diameter<150 & Diameter>20), method="t.test", p.adjust.method = "bonferroni")
## Without adjusting for size thresholds
compare_means(Diameter ~ Group, data = adipocount, method="t.test", p.adjust.method = "bonferroni")
#Plot distribution with a box and whisker plot
ggboxplot(d=subset(adipocount, Diameter<150 & Diameter>20),
x="Group",
y="Diameter",
fill="Group",
add = "mean_se")  +
theme_classic() +
scale_fill_manual(values=wccols) +
theme(axis.text.x=element_text(face="bold", size=10)) +
labs(x="", y="") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank()) +
NoLegend()
#Plot distribution with a violin plot
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(x=Group, y=Diameter, fill=Group)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75),
scale = "count",
trim = FALSE,
adjust = 1) +
labs(x="Group", y="Estimated Diameter (um)") +
scale_fill_manual(values=wccols) +
theme_classic()
#Plot a density distribution
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(Diameter)) +
geom_histogram(aes(y=..density.., fill=Group),stat="bin", binwidth=5,position="identity", alpha=0.4) +
theme_classic() +
scale_fill_manual(values=wccols) +
geom_density(aes(color=Group)) +
scale_color_manual(values=wccols)
#Ridgeplot colored by adipocyte size
ggplot(subset(adipocount, Diameter<150 & Diameter>10), aes(y=Group, x=Diameter, fill=stat(x))) +
geom_density_ridges_gradient(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5) +
theme_classic() +
scale_fill_viridis(name="Diameter",
option="C",
limits=c(0,150)) +
NoLegend()
#Ridgeplot colored by group with median plotted for all cells (no downsampling)
ggplot(subset(adipocount, Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.8)) +
geom_density_ridges2(scale = 3,
size= 0.2,
rel_min_height=0.01,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.5) +
theme_classic() +
scale_fill_manual(values=wccols) +
NoLegend()
#Downsampled ridgeplot with rain jitter of samples showing distribution for a random 20000 cells (~5000 per group)
ggplot(subset(adipocount[sample(1:nrow(adipocount), 20000),], Diameter<150 & Diameter>20), aes(y=Group, x=Diameter, fill=Group, alpha=0.9)) +
geom_density_ridges2(aes(point_color=Group, vline_color=Group),
scale = 3,
size= 0.2,
rel_min_height=0.01,
jittered_points=TRUE,
quantile_lines=TRUE,
quantiles=0.5,
vline_size=0.75,
point_size=0.01,
point_alpha=1,
position="points_jitter") +
labs(x=expression("Lipid Droplet Diameter" ~(Î¼m^2)),y="") +
theme_classic(base_size = 16) +
scale_fill_manual(values=wccols) +
scale_fill_manual(aesthetics=c("point_color", "vline_color"),values=wccols) +
scale_color_manual(values=wccols) +
NoLegend() +
theme(panel.grid.major = element_line(color="lightgrey"))
