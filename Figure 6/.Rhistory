# Chuan Li, Antoine Menoret, Cullen Farragher, Zhengqing Ouyang, Christopher Bonin, Paul Holvoet, Anthony T. Vella, Beiyan Zhou.  Single cell transcriptomics-based MacSpectrum reveals novel macrophage activation signatures in diseases. JCI insight.  April 16 2019. PMID: 30990466.
Idents(data.integrated) <- data.integrated$orig.ident
LAMs_macspec <- subset(data.integrated, highlevel2=="LAMs")
TRMs_macspec <- subset(data.integrated, highlevel2=="Tissue Resident Macrophages")
Effs_macspec <- subset(data.integrated, highlevel2=="Efferocytes")
Cycls_macspec <- subset(data.integrated, highlevel2=="Cycling Macrophages")
all_macspec <- subset(data.integrated, lowlevel2=="Macrophages")
LAMs_counts <- as.data.frame(as.matrix(LAMs_macspec@assays$RNA@data)) %>%
mutate_all(funs(as.numeric(.))) # Macspec needs numeric data
TRMs_counts <- as.data.frame(as.matrix(TRMs_macspec@assays$RNA@data)) %>%
mutate_all(funs(as.numeric(.)))
Effs_counts <- as.data.frame(as.matrix(Effs_macspec@assays$RNA@data)) %>%
mutate_all(funs(as.numeric(.)))
Cycls_counts <- as.data.frame(as.matrix(Cycls_macspec@assays$RNA@data)) %>%
mutate_all(funs(as.numeric(.)))
all_counts <- as.data.frame(as.matrix(all_macspec@assays$RNA@data)) %>%
mutate_all(funs(as.numeric(.)))
#MacSpectrum uses ENSEMBL IDs. We use a bioMart annotation to convert our gene names to ENSEMBL IDs.
anno <- read.delim("../Inputs/Fig6/gene_to_ENS.tsv",as.is=T)
genes <- as.data.frame(rownames(LAMs_counts))
colnames(genes) <- "Gene.name"
#We lose a few genes that are not linked properly to their ENSEMBL id, and also some that are duplicated.
genes <- left_join(genes, anno) %>% drop_na() %>% distinct(Gene.stable.ID,.keep_all = TRUE) %>% distinct(Gene.name, .keep_all=TRUE)
LAMs_counts <- LAMs_counts[genes$Gene.name,]
rownames(LAMs_counts) <- genes[match(genes$Gene.name, rownames(LAMs_counts)),]$Gene.stable.ID
TRMs_counts <- TRMs_counts[genes$Gene.name,]
rownames(TRMs_counts) <- genes[match(genes$Gene.name, rownames(TRMs_counts)),]$Gene.stable.ID
Effs_counts <- Effs_counts[genes$Gene.name,]
rownames(Effs_counts) <- genes[match(genes$Gene.name, rownames(Effs_counts)),]$Gene.stable.ID
Cycls_counts <- Cycls_counts[genes$Gene.name,]
rownames(Cycls_counts) <- genes[match(genes$Gene.name, rownames(Cycls_counts)),]$Gene.stable.ID
all_counts <- all_counts[genes$Gene.name,]
rownames(all_counts) <- genes[match(genes$Gene.name, rownames(all_counts)),]$Gene.stable.ID
# Check to confirm that names of samples line up with their metadata
all(names(LAMs_macspec$individual_mice) == colnames(LAMs_counts))
all(names(TRMs_macspec$individual_mice) == colnames(TRMs_counts))
all(names(Effs_macspec$individual_mice) == colnames(Effs_macspec))
all(names(Cycls_macspec$individual_mice) == colnames(Cycls_counts))
all(names(all_macspec$individual_mice) == colnames(all_counts))
# Store metadata
LAM_groups <- unname(LAMs_macspec$individual_mice)
TRM_groups <- unname(TRMs_macspec$individual_mice)
Eff_groups <- unname(Effs_macspec$individual_mice)
Cycl_groups <- unname(Cycls_macspec$individual_mice)
all_groups <- unname(all_macspec$individual_mice)
# Read in the index information
M1_mean <- read.table("../Inputs/Fig6/BMDM_m1_mean.txt",sep=",",header=TRUE)
M2_mean <- read.table("../Inputs/Fig6/BMDM_m2_mean.txt",sep=",",header=TRUE)
M0_mean <- read.table("../Inputs/Fig6/BMDM_m0_mean.txt",sep=",",header=TRUE)
rownames(M1_mean) <- M1_mean$GeneID
rownames(M2_mean) <- M2_mean$GeneID
rownames(M0_mean) <- M0_mean$GeneID
#
# # Save inputs - counts as a csv (instead of sparse matrix) are large.
# write.csv(LAMs_counts, file="MacSpectrum/input/LAM_genes-to-cells.csv")
# write.csv(TRMs_counts, file="MacSpectrum/input/TissueResMac_genes-to-cells.csv")
# write.csv(LAM_groups, file="MacSpectrum/input/LAM_group.csv")
# write.csv(TRM_groups, file="MacSpectrum/input/TissueResMac_group.csv")
inFile <- LAMs_counts
inFile_feature <- LAM_groups
inFile <- inFile-rowMeans(inFile)
MPI_genes <- intersect(M1_mean$GeneID,rownames(inFile))
M1_mean <- M1_mean[MPI_genes,]
M2_mean <- M2_mean[MPI_genes,]
inFile_bak <- inFile
inFile <- inFile[MPI_genes,]
AMDI_genes <- intersect(M0_mean$GeneID,rownames(inFile_bak))
M0_mean <- M0_mean[AMDI_genes,]
inFile_m0 <- inFile_bak[AMDI_genes,]
#sigma of mac cells:
inFile_sigma <- 1:ncol(inFile)
total_gene_number <- nrow(inFile)
for(i in 1:ncol(inFile)) {
options(digits=9)
inFile_sigma[i] <- (sum(inFile[,i]^2)/total_gene_number)^0.5
}
#sigma of mac cells for m0:
inFile_sigma_m0 <- 1:ncol(inFile_m0)
total_gene_number <- nrow(inFile_m0)
for(i in 1:ncol(inFile_m0)) {
options(digits=9)
inFile_sigma_m0[i] <- (sum(inFile_m0[,i]^2)/total_gene_number)^0.5
}
#sigma of M0 mean:
total_gene_number <- nrow(M0_mean)
M0_sigma <- (sum(M0_mean$value^2)/total_gene_number)^0.5
#sigma of M1 mean:
total_gene_number <- nrow(M1_mean)
M1_sigma <- (sum(M1_mean$value^2)/total_gene_number)^0.5
#sigma of M2 mean:
total_gene_number <- nrow(M2_mean)
M2_sigma <- (sum(M2_mean$value^2)/total_gene_number)^0.5
#correlation of Mac  to M0 mean:
total_gene_number <- nrow(inFile_m0)
inFile_Pearson_per_cell_m0 <- 1:ncol(inFile_m0)
for (j in 1:ncol(inFile_m0)){
inFile_Pearson_per_cell_m0[j] <- sum((inFile_m0[,j]/inFile_sigma_m0[j])*(M0_mean$value/M0_sigma))/total_gene_number
}
#correlation of Mac  to M1 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m1 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m1[j] <- sum((inFile[,j]/inFile_sigma[j])*(M1_mean$value/M1_sigma))/total_gene_number
}
#correlation of ATM  to M2 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m2 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m2[j] <- sum((inFile[,j]/inFile_sigma[j])*(M2_mean$value/M2_sigma))/total_gene_number
}
a <- 0.991414467
b <- 1
c <- -0.0185412856
x0 <- inFile_Pearson_per_cell_m1
y0 <- inFile_Pearson_per_cell_m2
d_sqr <- (a*x0+b*y0+c)^2/(a^2+b^2)
x_start <- -1
y_start <- (-a)*x_start+(-c)
x_end <- 1
y_end <- (-a)*x_end+(-c)
l <- ((x0-x_start)^2+(y0-y_start)^2-d_sqr)^0.5
l_max <- ((x_end-x_start)^2+(y_end-y_start)^2-d_sqr)^0.5
MPI <- (l-0)/(l_max-0)*100-50
AMDI <- -inFile_Pearson_per_cell_m0*50
mac_output <- data.frame(colnames(inFile),MPI,AMDI,inFile_feature,row.names=colnames(inFile))
colnames(mac_output) <- c("Samples","MPI","AMDI","Feature")
data.integrated$curr.barcodes <- rownames(data.integrated[[]])
LAMs_macspec <- left_join(x=mac_output,y=data.integrated[[c("curr.barcodes","orig.ident","HTO_maxID","lowlevel2" ,"highlevel2")]], by=c("Samples"="curr.barcodes"))
ggplot(LAMs_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title="LAMs") +
theme_pubr(base_size=14) +
NoLegend() +
scale_color_manual(values=wccols) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
# This is just a figure for the annotated regions
ggplot(LAMs_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
annotate("rect",xmin=1, xmax=16, ymin=-20,ymax=-1, fill="yellow",color=NA, alpha=0.2) +
annotate("rect",xmin=1, xmax=16, ymin=1,ymax=20, fill="red",color=NA, alpha=0.2) +
annotate("rect",xmin=-16, xmax=-1, ymin=1,ymax=20, fill="green",color=NA, alpha=0.2) +
annotate("rect",xmin=-16, xmax=-1, ymin=-20,ymax=-1, fill="blue",color=NA, alpha=0.2) +
labs(x="MPI",y="AMDI",title="") +
theme_pubr(base_size=14) +
NoLegend() +
xlim(-16,16) +
ylim(-20,20) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
theme(aspect.ratio=1)
inFile <- TRMs_counts
inFile_feature <- TRM_groups
inFile <- inFile-rowMeans(inFile)
MPI_genes <- intersect(M1_mean$GeneID,rownames(inFile))
M1_mean <- M1_mean[MPI_genes,]
M2_mean <- M2_mean[MPI_genes,]
inFile_bak <- inFile
inFile <- inFile[MPI_genes,]
AMDI_genes <- intersect(M0_mean$GeneID,rownames(inFile_bak))
M0_mean <- M0_mean[AMDI_genes,]
inFile_m0 <- inFile_bak[AMDI_genes,]
#sigma of mac cells:
inFile_sigma <- 1:ncol(inFile)
total_gene_number <- nrow(inFile)
for(i in 1:ncol(inFile)) {
options(digits=9)
inFile_sigma[i] <- (sum(inFile[,i]^2)/total_gene_number)^0.5
}
#sigma of mac cells for m0:
inFile_sigma_m0 <- 1:ncol(inFile_m0)
total_gene_number <- nrow(inFile_m0)
for(i in 1:ncol(inFile_m0)) {
options(digits=9)
inFile_sigma_m0[i] <- (sum(inFile_m0[,i]^2)/total_gene_number)^0.5
}
#sigma of M0 mean:
total_gene_number <- nrow(M0_mean)
M0_sigma <- (sum(M0_mean$value^2)/total_gene_number)^0.5
#sigma of M1 mean:
total_gene_number <- nrow(M1_mean)
M1_sigma <- (sum(M1_mean$value^2)/total_gene_number)^0.5
#sigma of M2 mean:
total_gene_number <- nrow(M2_mean)
M2_sigma <- (sum(M2_mean$value^2)/total_gene_number)^0.5
#correlation of Mac  to M0 mean:
total_gene_number <- nrow(inFile_m0)
inFile_Pearson_per_cell_m0 <- 1:ncol(inFile_m0)
for (j in 1:ncol(inFile_m0)){
inFile_Pearson_per_cell_m0[j] <- sum((inFile_m0[,j]/inFile_sigma_m0[j])*(M0_mean$value/M0_sigma))/total_gene_number
}
#correlation of Mac  to M1 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m1 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m1[j] <- sum((inFile[,j]/inFile_sigma[j])*(M1_mean$value/M1_sigma))/total_gene_number
}
#correlation of ATM  to M2 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m2 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m2[j] <- sum((inFile[,j]/inFile_sigma[j])*(M2_mean$value/M2_sigma))/total_gene_number
}
a <- 0.991414467
b <- 1
c <- -0.0185412856
x0 <- inFile_Pearson_per_cell_m1
y0 <- inFile_Pearson_per_cell_m2
d_sqr <- (a*x0+b*y0+c)^2/(a^2+b^2)
x_start <- -1
y_start <- (-a)*x_start+(-c)
x_end <- 1
y_end <- (-a)*x_end+(-c)
l <- ((x0-x_start)^2+(y0-y_start)^2-d_sqr)^0.5
l_max <- ((x_end-x_start)^2+(y_end-y_start)^2-d_sqr)^0.5
MPI <- (l-0)/(l_max-0)*100-50
AMDI <- -inFile_Pearson_per_cell_m0*50
mac_output <- data.frame(colnames(inFile),MPI,AMDI,inFile_feature,row.names=colnames(inFile))
colnames(mac_output) <- c("Samples","MPI","AMDI","Feature")
data.integrated$curr.barcodes <- rownames(data.integrated[[]])
TRMs_macspec <- left_join(x=mac_output,y=data.integrated[[c("curr.barcodes","orig.ident","HTO_maxID","lowlevel2" ,"highlevel2")]], by=c("Samples"="curr.barcodes"))
ggplot(TRMs_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title="TRMs") +
theme_pubr(base_size=14) +
NoLegend() +
scale_color_manual(values=wccols) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
inFile <- Effs_counts
inFile_feature <- Eff_groups
inFile <- inFile-rowMeans(inFile)
MPI_genes <- intersect(M1_mean$GeneID,rownames(inFile))
M1_mean <- M1_mean[MPI_genes,]
M2_mean <- M2_mean[MPI_genes,]
inFile_bak <- inFile
inFile <- inFile[MPI_genes,]
AMDI_genes <- intersect(M0_mean$GeneID,rownames(inFile_bak))
M0_mean <- M0_mean[AMDI_genes,]
inFile_m0 <- inFile_bak[AMDI_genes,]
#sigma of mac cells:
inFile_sigma <- 1:ncol(inFile)
total_gene_number <- nrow(inFile)
for(i in 1:ncol(inFile)) {
options(digits=9)
inFile_sigma[i] <- (sum(inFile[,i]^2)/total_gene_number)^0.5
}
#sigma of mac cells for m0:
inFile_sigma_m0 <- 1:ncol(inFile_m0)
total_gene_number <- nrow(inFile_m0)
for(i in 1:ncol(inFile_m0)) {
options(digits=9)
inFile_sigma_m0[i] <- (sum(inFile_m0[,i]^2)/total_gene_number)^0.5
}
#sigma of M0 mean:
total_gene_number <- nrow(M0_mean)
M0_sigma <- (sum(M0_mean$value^2)/total_gene_number)^0.5
#sigma of M1 mean:
total_gene_number <- nrow(M1_mean)
M1_sigma <- (sum(M1_mean$value^2)/total_gene_number)^0.5
#sigma of M2 mean:
total_gene_number <- nrow(M2_mean)
M2_sigma <- (sum(M2_mean$value^2)/total_gene_number)^0.5
#correlation of Mac  to M0 mean:
total_gene_number <- nrow(inFile_m0)
inFile_Pearson_per_cell_m0 <- 1:ncol(inFile_m0)
for (j in 1:ncol(inFile_m0)){
inFile_Pearson_per_cell_m0[j] <- sum((inFile_m0[,j]/inFile_sigma_m0[j])*(M0_mean$value/M0_sigma))/total_gene_number
}
#correlation of Mac  to M1 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m1 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m1[j] <- sum((inFile[,j]/inFile_sigma[j])*(M1_mean$value/M1_sigma))/total_gene_number
}
#correlation of ATM  to M2 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m2 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m2[j] <- sum((inFile[,j]/inFile_sigma[j])*(M2_mean$value/M2_sigma))/total_gene_number
}
a <- 0.991414467
b <- 1
c <- -0.0185412856
x0 <- inFile_Pearson_per_cell_m1
y0 <- inFile_Pearson_per_cell_m2
d_sqr <- (a*x0+b*y0+c)^2/(a^2+b^2)
x_start <- -1
y_start <- (-a)*x_start+(-c)
x_end <- 1
y_end <- (-a)*x_end+(-c)
l <- ((x0-x_start)^2+(y0-y_start)^2-d_sqr)^0.5
l_max <- ((x_end-x_start)^2+(y_end-y_start)^2-d_sqr)^0.5
MPI <- (l-0)/(l_max-0)*100-50
AMDI <- -inFile_Pearson_per_cell_m0*50
mac_output <- data.frame(colnames(inFile),MPI,AMDI,inFile_feature,row.names=colnames(inFile))
colnames(mac_output) <- c("Samples","MPI","AMDI","Feature")
data.integrated$curr.barcodes <- rownames(data.integrated[[]])
Effs_macspec <- left_join(x=mac_output,y=data.integrated[[c("curr.barcodes","orig.ident","HTO_maxID","lowlevel2" ,"highlevel2")]], by=c("Samples"="curr.barcodes"))
ggplot(Effs_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title="Effs") +
theme_pubr(base_size=14) +
NoLegend() +
scale_color_manual(values=wccols) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
inFile <- Cycls_counts
inFile_feature <- Cycl_groups
inFile <- inFile-rowMeans(inFile)
MPI_genes <- intersect(M1_mean$GeneID,rownames(inFile))
M1_mean <- M1_mean[MPI_genes,]
M2_mean <- M2_mean[MPI_genes,]
inFile_bak <- inFile
inFile <- inFile[MPI_genes,]
AMDI_genes <- intersect(M0_mean$GeneID,rownames(inFile_bak))
M0_mean <- M0_mean[AMDI_genes,]
inFile_m0 <- inFile_bak[AMDI_genes,]
#sigma of mac cells:
inFile_sigma <- 1:ncol(inFile)
total_gene_number <- nrow(inFile)
for(i in 1:ncol(inFile)) {
options(digits=9)
inFile_sigma[i] <- (sum(inFile[,i]^2)/total_gene_number)^0.5
}
#sigma of mac cells for m0:
inFile_sigma_m0 <- 1:ncol(inFile_m0)
total_gene_number <- nrow(inFile_m0)
for(i in 1:ncol(inFile_m0)) {
options(digits=9)
inFile_sigma_m0[i] <- (sum(inFile_m0[,i]^2)/total_gene_number)^0.5
}
#sigma of M0 mean:
total_gene_number <- nrow(M0_mean)
M0_sigma <- (sum(M0_mean$value^2)/total_gene_number)^0.5
#sigma of M1 mean:
total_gene_number <- nrow(M1_mean)
M1_sigma <- (sum(M1_mean$value^2)/total_gene_number)^0.5
#sigma of M2 mean:
total_gene_number <- nrow(M2_mean)
M2_sigma <- (sum(M2_mean$value^2)/total_gene_number)^0.5
#correlation of Mac  to M0 mean:
total_gene_number <- nrow(inFile_m0)
inFile_Pearson_per_cell_m0 <- 1:ncol(inFile_m0)
for (j in 1:ncol(inFile_m0)){
inFile_Pearson_per_cell_m0[j] <- sum((inFile_m0[,j]/inFile_sigma_m0[j])*(M0_mean$value/M0_sigma))/total_gene_number
}
#correlation of Mac  to M1 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m1 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m1[j] <- sum((inFile[,j]/inFile_sigma[j])*(M1_mean$value/M1_sigma))/total_gene_number
}
#correlation of ATM  to M2 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m2 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m2[j] <- sum((inFile[,j]/inFile_sigma[j])*(M2_mean$value/M2_sigma))/total_gene_number
}
a <- 0.991414467
b <- 1
c <- -0.0185412856
x0 <- inFile_Pearson_per_cell_m1
y0 <- inFile_Pearson_per_cell_m2
d_sqr <- (a*x0+b*y0+c)^2/(a^2+b^2)
x_start <- -1
y_start <- (-a)*x_start+(-c)
x_end <- 1
y_end <- (-a)*x_end+(-c)
l <- ((x0-x_start)^2+(y0-y_start)^2-d_sqr)^0.5
l_max <- ((x_end-x_start)^2+(y_end-y_start)^2-d_sqr)^0.5
MPI <- (l-0)/(l_max-0)*100-50
AMDI <- -inFile_Pearson_per_cell_m0*50
mac_output <- data.frame(colnames(inFile),MPI,AMDI,inFile_feature,row.names=colnames(inFile))
colnames(mac_output) <- c("Samples","MPI","AMDI","Feature")
data.integrated$curr.barcodes <- rownames(data.integrated[[]])
Cycls_macspec <- left_join(x=mac_output,y=data.integrated[[c("curr.barcodes","orig.ident","HTO_maxID","lowlevel2" ,"highlevel2")]], by=c("Samples"="curr.barcodes"))
ggplot(Cycls_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title="Cycls") +
theme_pubr(base_size=14) +
NoLegend() +
scale_color_manual(values=wccols) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
inFile <- all_counts
inFile_feature <- all_groups
inFile <- inFile-rowMeans(inFile)
MPI_genes <- intersect(M1_mean$GeneID,rownames(inFile))
M1_mean <- M1_mean[MPI_genes,]
M2_mean <- M2_mean[MPI_genes,]
inFile_bak <- inFile
inFile <- inFile[MPI_genes,]
AMDI_genes <- intersect(M0_mean$GeneID,rownames(inFile_bak))
M0_mean <- M0_mean[AMDI_genes,]
inFile_m0 <- inFile_bak[AMDI_genes,]
#sigma of mac cells:
inFile_sigma <- 1:ncol(inFile)
total_gene_number <- nrow(inFile)
for(i in 1:ncol(inFile)) {
options(digits=9)
inFile_sigma[i] <- (sum(inFile[,i]^2)/total_gene_number)^0.5
}
#sigma of mac cells for m0:
inFile_sigma_m0 <- 1:ncol(inFile_m0)
total_gene_number <- nrow(inFile_m0)
for(i in 1:ncol(inFile_m0)) {
options(digits=9)
inFile_sigma_m0[i] <- (sum(inFile_m0[,i]^2)/total_gene_number)^0.5
}
#sigma of M0 mean:
total_gene_number <- nrow(M0_mean)
M0_sigma <- (sum(M0_mean$value^2)/total_gene_number)^0.5
#sigma of M1 mean:
total_gene_number <- nrow(M1_mean)
M1_sigma <- (sum(M1_mean$value^2)/total_gene_number)^0.5
#sigma of M2 mean:
total_gene_number <- nrow(M2_mean)
M2_sigma <- (sum(M2_mean$value^2)/total_gene_number)^0.5
#correlation of Mac  to M0 mean:
total_gene_number <- nrow(inFile_m0)
inFile_Pearson_per_cell_m0 <- 1:ncol(inFile_m0)
for (j in 1:ncol(inFile_m0)){
inFile_Pearson_per_cell_m0[j] <- sum((inFile_m0[,j]/inFile_sigma_m0[j])*(M0_mean$value/M0_sigma))/total_gene_number
}
#correlation of Mac  to M1 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m1 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m1[j] <- sum((inFile[,j]/inFile_sigma[j])*(M1_mean$value/M1_sigma))/total_gene_number
}
#correlation of ATM  to M2 mean:
total_gene_number <- nrow(M2_mean)
inFile_Pearson_per_cell_m2 <- 1:ncol(inFile)
for (j in 1:ncol(inFile)){
inFile_Pearson_per_cell_m2[j] <- sum((inFile[,j]/inFile_sigma[j])*(M2_mean$value/M2_sigma))/total_gene_number
}
a <- 0.991414467
b <- 1
c <- -0.0185412856
x0 <- inFile_Pearson_per_cell_m1
y0 <- inFile_Pearson_per_cell_m2
d_sqr <- (a*x0+b*y0+c)^2/(a^2+b^2)
x_start <- -1
y_start <- (-a)*x_start+(-c)
x_end <- 1
y_end <- (-a)*x_end+(-c)
l <- ((x0-x_start)^2+(y0-y_start)^2-d_sqr)^0.5
l_max <- ((x_end-x_start)^2+(y_end-y_start)^2-d_sqr)^0.5
MPI <- (l-0)/(l_max-0)*100-50
AMDI <- -inFile_Pearson_per_cell_m0*50
mac_output <- data.frame(colnames(inFile),MPI,AMDI,inFile_feature,row.names=colnames(inFile))
colnames(mac_output) <- c("Samples","MPI","AMDI","Feature")
data.integrated$curr.barcodes <- rownames(data.integrated[[]])
alls_macspec <- left_join(x=mac_output,y=data.integrated[[c("curr.barcodes","orig.ident","HTO_maxID","lowlevel2" ,"highlevel2")]], by=c("Samples"="curr.barcodes"))
ggplot(alls_macspec, aes(x=MPI,y=AMDI,color=orig.ident)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title="alls") +
theme_pubr(base_size=14) +
NoLegend() +
scale_color_manual(values=wccols) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
#For plotting other gene information:
gene <- "Retnla"
alls_macspec$goi <- unname(all_macspec@assays$RNA@data[gene,])
ggplot(alls_macspec, aes(x=MPI,y=AMDI,color=goi)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title=gene) +
theme_pubr(base_size=14) +
scale_color_viridis(option="D") +
theme(legend.position="right", aspect.ratio = 1) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
gene <- "Il1b"
alls_macspec$goi <- unname(all_macspec@assays$RNA@data[gene,])
ggplot(alls_macspec, aes(x=MPI,y=AMDI,color=goi)) +
geom_density_2d(alpha = 0.8) +
geom_point(alpha = 0.5, size=0.05) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
labs(x="MPI",y="AMDI",title=gene) +
theme_pubr(base_size=14) +
scale_color_viridis(option="D") +
theme(legend.position="right", aspect.ratio = 1) +
xlim(-16,16) +
ylim(-20,20) +
facet_wrap(~orig.ident, ncol=4)
sessionInfo()
