library(Seurat)
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
library(formattable)
library(dplyr)
#Data file
data.integrated <- readRDS("../Inputs/IntegratedData.rds")
#Color panels
maccols <- brewer.pal(n=8, name="Blues")[c(-1,-3,-5,-7)]
monocols <- c("#ff8ade","#e324ad")
dccols <- brewer.pal(n=9, name="Greens")[-1]
tcols <- brewer.pal(n=8, name="Reds")[-1]
nkcols <- c("#876149","#6e3f22")
bcols <- brewer.pal(n=4, name="Purples")[-1]
othcols <- c("#71a157","#00c5cc","#a18e25","#b282b3")
strcols <- brewer.pal(n=4, name="Oranges")[-1]
wccols = c("#878787", "#518db6","#94cc73","#e96b53")
cols <- c(maccols,monocols,dccols,tcols,nkcols,bcols,othcols,strcols)
llcols <- c("#4292C6","#ff8ade","#238B45","#EF3B2C","#876149","#9E9AC8","#71a157","#00c5cc","#a18e25","#b282b3","#FD8D3C")
#Calculate cellspm
cellspm <- table(data.integrated$individual_mice, data.integrated$highlevel2)
propcellspm <- prop.table(cellspm, margin=1)
#Convert to a dataframe
cellspm <- as.data.frame(cellspm)
propcellspm <- as.data.frame(propcellspm)
#Change column names
colnames(cellspm) <- c("Mouse","Cluster","Counts")
colnames(propcellspm) <- c("Mouse","Cluster","Frequency")
#Add a column indicating the groups to each table
cellspm$Group <- gsub("_Hashtag.","", cellspm$Mouse)
propcellspm$Group <- gsub("_Hashtag.","", propcellspm$Mouse)
#Normalize "Counts" to "Counts per hundred cells sequenced"
cphc<-list()
cellspm <- cellspm %>% arrange(.,Mouse)
for (i in levels(cellspm$Mouse)){
x <- sum(subset(cellspm, Mouse==i)$Counts)/100
y <- subset(cellspm, Mouse==i)$Counts/x
cphc <- append(cphc, y)
}
cellspm$CountsPerHundred <- as.numeric(cphc)
#Function to calculate standard error for each given variable (cell cluster)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
se = sd(x[[col]], na.rm=TRUE) / sqrt(sum(!is.na(x[[col]]))))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
names(data_sum)[names(data_sum) == 'mean'] <- varname
return(data_sum)
}
#Summarize the data
clustercounts <- data_summary(cellspm, varname="CountsPerHundred", groupnames=c("Group","Cluster"))
clusterprops <- data_summary(propcellspm, varname="Frequency", groupnames=c("Group","Cluster"))
fig7cols <- c(rep("#e6e6e6",20),"#99000D","#876149","#6e3f22",rep("#e6e6e6",10))
DimPlot(data.integrated, split.by="orig.ident",group.by="highlevel2") +
NoLegend() +
labs(title="") &
scale_color_manual(values=fig7cols) &
NoAxes()
SuppFig7gdNKTcells <- subset(data.integrated, highlevel2=="gd T Cells" | highlevel2=="NK Cells" | highlevel2=="NKT Cells" )
Idents(SuppFig7gdNKTcells) <- SuppFig7gdNKTcells$highlevel2
DefaultAssay(SuppFig5gdNKTcells) <- "RNA"
Idents(SuppFig7gdNKTcells) <- SuppFig7gdNKTcells$highlevel2
DefaultAssay(SuppFig7gdNKTcells) <- "RNA"
VlnPlot(SuppFig7gdNKTcells,
features=c("Cd3e","Trdc","Klrb1b","Klrb1c"),
stack=T,
flip=T,
fill.by="ident",
cols=c("#99000D","#876149","#6e3f22")) +
labs(x="") +
scale_x_discrete(labels=c(paste("\u03b3","/","\u03b4"," T Cells", sep=""),"NK Cells","NKT Cells")) +
NoLegend() +
theme(aspect.ratio = 0.8, strip.text=element_text(face="bold.italic"), axis.text.x=element_text(size=14))
gdNKTcellspm <- subset(cellspm,
Cluster=="gd T Cells" |
Cluster=="NK Cells" |
Cluster=="NKT Cells")
gdNKTcellspm$Group <- factor(gdNKTcellspm$Group, levels = c("Lean","Obese","WL","WC"))
gdNKTcounts <- subset(clustercounts,
Cluster=="gd T Cells" |
Cluster=="NK Cells" |
Cluster=="NKT Cells")
gdNKTcounts$Group <- factor(gdNKTcounts$Group, levels = c("Lean","Obese","WL","WC"))
#T tests with bonferroni correction are used here comparing all groups to the reference lean control group.
compare_means(CountsPerHundred ~ Group, data = subset(gdNKTcellspm, Cluster=="gd T Cells"), method="t.test", p.adjust.method = "bonferroni")
compare_means(CountsPerHundred ~ Group, data = subset(gdNKTcellspm, Cluster=="NK Cells"), method="t.test", p.adjust.method = "bonferroni")
compare_means(CountsPerHundred ~ Group, data = subset(gdNKTcellspm, Cluster=="NKT Cells"), method="t.test", p.adjust.method = "bonferroni")
ggboxplot(d=subset(gdNKTcellspm, Cluster=="gd T Cells"),
x="Group",
y="CountsPerHundred",
fill="Group",
facet.by="Cluster",
add = "mean_se")  +
theme_classic() +
scale_fill_manual(values=wccols) +
theme(axis.text.y=element_text(face="bold", size=10)) +
labs(x="", y="") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank(), strip.text = element_text(face="bold", size=10)) +
facet_wrap(~Cluster) +
NoLegend() +
ylim(0,10)
ggboxplot(d=subset(gdNKTcellspm, Cluster=="NK Cells"),
x="Group",
y="CountsPerHundred",
fill="Group",
facet.by="Cluster",
add = "mean_se") +
theme_classic() +
scale_fill_manual(values=wccols) +
theme(axis.text.y=element_text(face="bold", size=10)) +
labs(x="", y="") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank(), strip.text = element_text(face="bold", size=10)) +
facet_wrap(~Cluster) +
NoLegend() +
ylim(0,15)
ggboxplot(d=subset(gdNKTcellspm, Cluster=="NKT Cells"),
x="Group",
y="CountsPerHundred",
fill="Group",
facet.by="Cluster",
add = "mean_se") +
theme_classic() +
scale_fill_manual(values=wccols) +
theme(axis.text.y=element_text(face="bold", size=10)) +
labs(x="", y="") +
theme(axis.text.x = element_blank(), axis.ticks = element_blank(), strip.text = element_text(face="bold", size=10)) +
facet_wrap(~Cluster) +
NoLegend() +
ylim(0,5)
sessionInfo()
